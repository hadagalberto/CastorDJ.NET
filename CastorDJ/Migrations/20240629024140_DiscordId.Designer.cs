// <auto-generated />
using System;
using CastorDJ.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CastorDJ.Migrations
{
    [DbContext(typeof(CastorDJDbContext))]
    [Migration("20240629024140_DiscordId")]
    partial class DiscordId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CastorDJ.Models.DiscordServer", b =>
                {
                    b.Property<Guid>("IdDiscordServer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscordId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDiscordServer");

                    b.ToTable("DiscordServers", (string)null);
                });

            modelBuilder.Entity("CastorDJ.Models.PlayedTrack", b =>
                {
                    b.Property<Guid>("IdPlayedTrack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatePlayed")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DiscordServerIdDiscordServer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<Guid>("IdDiscordServer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoutubeUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPlayedTrack");

                    b.HasIndex("DiscordServerIdDiscordServer");

                    b.ToTable("PlayedTracks", (string)null);
                });

            modelBuilder.Entity("CastorDJ.Models.Playlist", b =>
                {
                    b.Property<Guid>("IdPlaylist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DiscordServerIdDiscordServer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDiscordServer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPlaylist");

                    b.HasIndex("DiscordServerIdDiscordServer");

                    b.ToTable("Playlists", (string)null);
                });

            modelBuilder.Entity("CastorDJ.Models.PlaylistItem", b =>
                {
                    b.Property<Guid>("IdPlaylistItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<Guid>("IdPlaylist")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PlaylistIdPlaylist")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("YoutubeUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPlaylistItem");

                    b.HasIndex("PlaylistIdPlaylist");

                    b.ToTable("PlaylistItems", (string)null);
                });

            modelBuilder.Entity("CastorDJ.Models.PlayedTrack", b =>
                {
                    b.HasOne("CastorDJ.Models.DiscordServer", "DiscordServer")
                        .WithMany()
                        .HasForeignKey("DiscordServerIdDiscordServer");

                    b.Navigation("DiscordServer");
                });

            modelBuilder.Entity("CastorDJ.Models.Playlist", b =>
                {
                    b.HasOne("CastorDJ.Models.DiscordServer", "DiscordServer")
                        .WithMany()
                        .HasForeignKey("DiscordServerIdDiscordServer");

                    b.Navigation("DiscordServer");
                });

            modelBuilder.Entity("CastorDJ.Models.PlaylistItem", b =>
                {
                    b.HasOne("CastorDJ.Models.Playlist", "Playlist")
                        .WithMany("PlaylistItems")
                        .HasForeignKey("PlaylistIdPlaylist");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("CastorDJ.Models.Playlist", b =>
                {
                    b.Navigation("PlaylistItems");
                });
#pragma warning restore 612, 618
        }
    }
}
